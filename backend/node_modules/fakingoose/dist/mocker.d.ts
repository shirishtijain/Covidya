import { Model, Schema, Document } from 'mongoose';
import { FactoryOptions, GlobalOptions, GlobalObjectIdOptions, GlobalDecimal128Options } from './types';
export declare class Mocker<T extends Document> {
    schema: Schema<T>;
    globalOptions: GlobalOptions;
    options: FactoryOptions;
    constructor(model: Schema<T> | Model<T>, options?: FactoryOptions);
    setGlobalObjectIdOptions(options: GlobalObjectIdOptions): this;
    setGlobalDecimal128Options(options: GlobalDecimal128Options): this;
    generate(staticFields?: Record<string, unknown>, overrideOptions?: FactoryOptions): T;
}
export declare function factory<T extends Document>(modelOrSchema: Schema<T> | Model<T>, options?: FactoryOptions): Mocker<T>;
